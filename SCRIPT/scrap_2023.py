# -*- coding: utf-8 -*-
"""scrap_data_football.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16uIF-PNDlEzFi3EUFSxgwcWpH-Vbo578
"""


url = "https://www.uol.com.br/esporte/futebol/campeonatos/brasileirao/"

req = requests.get(url)

soup = BeautifulSoup(req.content, 'html.parser')

lista_imgs = []
divs = soup.findAll("div", {"class": "competition"})
for div in divs:
    rows = div.find_all_next('img')
    
lista_imgs = rows[0:21] 

lista_times = []
for i in lista_imgs:
  #print(i)
  pattern = '<img src="https://e.imguol.com/futebol/brasoes/40x40/'
  temp = str(i).replace(pattern, '').replace('.png"/>', '')
  #print (temp)
  lista_times.append(temp)

lista_times = lista_times[0:20]

################################

temp_pontos = []
divs = soup.find_all("div", {"class": "competition"})
for div in divs:
    rows = div.find_all('tbody', {"class": "score"})
    for i in rows:
      for row in i.find_all('tr'):
        for teste in row.find_all('td'):
          #print(teste.text)
          temp_pontos.append(teste.text)

lista_score = temp_pontos[0:180]

# Converter from str to int
lista_score2 = []
for n in range(0,180,9):
  for i in range(n,n+10):
    lis = lista_score[n:i]
    temp = [eval(i) for i in lis]
    #print("Linha", n,":",temp)
  lista_score2.append(temp) 

#
#lista_score2

colunas = ['pontos', 'jogos', 'vitorias', 'empates', 'derrotas', 'gols_marcados', 'gols_contra', 'saldo_gols', 'aproveitamento']

df_2023 = pd.DataFrame(lista_score2[0:20], columns=colunas)
df_2023['times'] = lista_times
df_2023 = df_2023[['times','pontos', 'jogos', 'vitorias', 'empates', 'derrotas', 'gols_marcados', 'gols_contra', 'saldo_gols', 'aproveitamento']]

temp = np.where(df.times == 'athletico', "athletico-pr",df_2023.times)
df_2023['times'] = temp

df_2023.sort_values(by=['pontos','vitorias','saldo_gols'], ascending=False)

print("\nDataset df:\n", df_2023.shape)
print("\nDataset df:\n", df_2023.columns)

#df_br.times.replace('Atletico-PR', 'Athletico-PR', inplace=True)
df_2023.to_csv("CSV/dados_2023.csv")